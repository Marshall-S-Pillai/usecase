name: Terraform Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Plan Terraform deployment
    - name: Terraform Plan
      run: terraform plan

    # Apply Terraform deployment
    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve

    # Create resources
    - name: Create VPC and Security Group
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
      run: |
        # Add a Terraform file for creating the VPC and Security Group dynamically
        cat <<EOF > main.tf
        provider "aws" {
          region = "us-east-1"
        }

        resource "aws_vpc" "example" {
          cidr_block = "10.0.0.0/16"
        }

        resource "aws_security_group" "web_sg" {
          name        = "web_sg"
          description = "Web server security group"
          vpc_id      = aws_vpc.example.id

          ingress {
            from_port   = 80
            to_port     = 80
            protocol    = "tcp"
            cidr_blocks = ["0.0.0.0/0"]
          }

          egress {
            from_port   = 0
            to_port     = 0
            protocol    = "-1"
            cidr_blocks = ["0.0.0.0/0"]
          }
        }
        EOF
        terraform init
        terraform apply -auto-approve
